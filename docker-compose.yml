version: "3.9"
services:
  frigate:
    container_name: frigate
    hostname: frigate
    privileged: true # this may not be necessary for all setups
    restart: unless-stopped
    image: ghcr.io/blakeblackshear/frigate:stable
    shm_size: "2048mb" # update for your cameras based on calculation above
    devices:
      - /dev/bus/usb:/dev/bus/usb # passes the USB Coral, needs to be modified for other versions
      #- /dev/apex_0:/dev/apex_0 # passes a PCIe Coral, follow driver instructions here https://coral.ai/docs/m2/get-started/#2a-on-linux
      #- /dev/dri/renderD128 # for intel hwaccel, needs to be updated for your hardware
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./config/config.yml:/config/config.yml # Create config.yml before docker-compose up -d
      - ./storage:/media/frigate
      - type: tmpfs 
        target: /tmp/cache
        tmpfs:
          size: 2000000000  # 2GB of memory, reduces SSD/SD Card wear
    ports:
      - "5000:5000"
      - "8554:8554" # RTSP feeds
      - "8555:8555/tcp" # WebRTC over tcp
      - "8555:8555/udp" # WebRTC over udp
    networks:
      - backend
    environment:
      # Core settings
      TZ: $SET_TZ
      FRIGATE_RTSP_PASSWORD: $FRIGATE_RTSP_PASSWORD
      
      # MQTT Configuration
      FRIGATE_MQTT_HOST: ${MQTT_HOST:-mosquitto}
      FRIGATE_MQTT_USER: ${MQTT_USER:-}
      FRIGATE_MQTT_PASSWORD: ${MQTT_PASSWORD:-}
      
      # Debug options
      FRIGATE_DEBUG_LOGS: ${DEBUG_LOGS:-false}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    labels:
      - "com.racksync.description=Frigate NVR Instance"
      - "com.racksync.service=surveillance"
      - "com.racksync.maintainer=devops@racksync.com"
    security_opt:
      - no-new-privileges:true
    # Optional: If you want to use NVIDIA GPU
    #runtime: nvidia
    #environment:
    #  - NVIDIA_VISIBLE_DEVICES=all
    #  - NVIDIA_DRIVER_CAPABILITIES=compute,utility,video

networks:
  backend:
    external:
      name: backend